---

# Instead of testing that the deployment config is removed, we test that the pods
# are cleaned up afterwards
- name: "Test|Check that all pods have been removed"
  shell: oc get pods --namespace={{ namespace }} --selector="deploymentconfig in (grafana,prometheus)" 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"No resources found." not in result.stdout'
  until: '"No resources found." in result.stdout'

- name: "Test|Check that the grafana route has been removed"
  shell: oc get route --namespace={{ namespace }} {{ grafana_route_name }} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'

- name: "Test|Check that the prometheus route has been removed"
  shell: oc get route --namespace={{ namespace }} {{ prometheus_route_name}} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'

- name: "Test|Check that all services have been removed"
  shell: oc get service --namespace={{ namespace }} {{ item }} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'
  with_items:
    - '{{ grafana_service_name}}'
    - '{{ grafana_internal_service_name}}'
    - '{{ prometheus_service_name}}'
    - '{{ prometheus_internal_service_name}}'
    - '{{ postgres_service_name}}'

- name: "Test|Check that all secrets have been removed"
  shell: oc get secret --namespace={{ namespace }} {{ prometheus_secret_name }} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'

- name: "Test|Check that all config maps have been removed"
  shell: oc get configmap --namespace={{ namespace }} {{ item }} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'
  with_items:
    - '{{ grafana_ini_configmap_name }}'
    - '{{ grafana_datasources_configmap_name }}'
    - '{{ grafana_dashboards_configmap_name }}'
    - '{{ prometheus_configmap_name }}'
    - metrics

- name: "Test|Check that all persistent volume claims have been removed"
  shell: oc get pvc --namespace={{ namespace }} {{ item }} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'
  with_items:
  - '{{ grafana_claim_name }}'
  - '{{ prometheus_claim_name }}'

- name: "Test|Check that the service account has been removed"
  shell: oc get serviceaccount --namespace={{ namespace }} {{ proxy_serviceaccount_name }} 2>&1
  register: result
  retries: 30
  delay: 10
  failed_when:
    - '"not found" not in result.stdout'
  until: '"not found" in result.stdout'
